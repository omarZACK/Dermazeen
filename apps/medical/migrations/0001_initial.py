# Generated by Django 5.2.3 on 2025-06-16 16:22

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('analysis', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Allergy',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('allergy_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name of the allergy/allergen', max_length=100, unique=True, validators=[django.core.validators.MinLengthValidator(2)])),
                ('description', models.TextField(blank=True, help_text='Optional description of the allergy', null=True)),
            ],
            options={
                'verbose_name': 'Allergy',
                'verbose_name_plural': 'Allergies',
                'db_table': 'allergy',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MedicalHistory',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('is_chronic', models.BooleanField(default=False, help_text='Whether this condition is chronic for this user')),
                ('diagnosed_at', models.DateTimeField(blank=True, help_text='When this condition was diagnosed', null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this medical history', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this medical history record is active', verbose_name='Is Active')),
                ('condition', models.ForeignKey(help_text='The skin condition', on_delete=django.db.models.deletion.CASCADE, related_name='medical_histories', to='analysis.skincondition')),
                ('profile', models.ForeignKey(help_text='Patient profile this medical history belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='medical_histories', to='accounts.patientprofile')),
            ],
            options={
                'verbose_name': 'Medical History',
                'verbose_name_plural': 'Medical Histories',
                'db_table': 'medical_history',
                'ordering': ['-diagnosed_at', '-created_at'],
                'unique_together': {('profile', 'condition')},
            },
        ),
        migrations.CreateModel(
            name='UserAllergy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this specific allergy', null=True)),
                ('severity_level', models.CharField(choices=[('none', 'No Problem'), ('mild', 'Mild'), ('moderate', 'Moderate'), ('severe', 'Severe')], default='mild', help_text='Severity level of the allergic reaction', max_length=20)),
                ('diagnosed_at', models.DateTimeField(blank=True, help_text='When this allergy was diagnosed', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this allergy is active', verbose_name='Is Active')),
                ('allergy', models.ForeignKey(help_text='The allergy/allergen', on_delete=django.db.models.deletion.CASCADE, related_name='user_allergies', to='medical.allergy')),
                ('profile', models.ForeignKey(help_text='Patient profile this allergy belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='user_allergies', to='accounts.patientprofile')),
            ],
            options={
                'verbose_name': 'User Allergy',
                'verbose_name_plural': 'User Allergies',
                'db_table': 'user_allergy',
                'ordering': ['-created_at'],
                'unique_together': {('profile', 'allergy')},
            },
        ),
    ]
