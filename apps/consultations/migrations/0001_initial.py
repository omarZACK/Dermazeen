# Generated by Django 5.2.4 on 2025-07-27 14:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('analysis', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('requested_at', models.DateTimeField(help_text='Timestamp when the consultation was requested.')),
                ('scheduled_at', models.DateTimeField(blank=True, help_text='Scheduled date and time for the consultation.', null=True)),
                ('completed_at', models.DateTimeField(blank=True, help_text='Timestamp when the consultation was completed.', null=True)),
                ('consultation_status', models.CharField(choices=[('requested', 'Requested'), ('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='requested', help_text='Current status of the consultation.', max_length=15)),
                ('user_message', models.TextField(help_text='Message from the patient describing their concerns.')),
                ('doctor_response', models.TextField(blank=True, help_text="Doctor's response and recommendations.", null=True)),
                ('analysis', models.OneToOneField(blank=True, help_text='Skin analysis that prompted this consultation.', null=True, on_delete=django.db.models.deletion.CASCADE, to='analysis.skinanalysis')),
                ('doctor', models.ForeignKey(help_text='Doctor assigned to this consultation.', on_delete=django.db.models.deletion.CASCADE, related_name='doctor_consultations', to='accounts.doctor')),
                ('user', models.ForeignKey(help_text='Patient requesting the consultation.', on_delete=django.db.models.deletion.CASCADE, related_name='patient_consultations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Consultation',
                'verbose_name_plural': 'Consultations',
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='MedicalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('test_name', models.CharField(help_text="Unique name of the medical test (e.g., 'Hormone Panel', 'CBC').", max_length=200, unique=True)),
                ('description', models.TextField(help_text="Description of what the test is and why it's used.")),
                ('test_category', models.CharField(choices=[('blood', 'Blood Test'), ('hormone', 'Hormone Test'), ('allergy', 'Allergy Test'), ('dermatology', 'Dermatological Test'), ('imaging', 'Imaging Test')], help_text='Category of the medical test.', max_length=15)),
                ('preparation_instructions', models.TextField(blank=True, help_text='Instructions for test preparation (fasting, medications to stop, etc.).', null=True)),
                ('requires_lab', models.BooleanField(default=True, help_text='Whether this test requires a laboratory visit.')),
            ],
            options={
                'verbose_name': 'Medical Test',
                'verbose_name_plural': 'Medical Tests',
                'ordering': ['test_name'],
                'indexes': [models.Index(fields=['test_category'], name='consultatio_test_ca_8b4917_idx'), models.Index(fields=['requires_lab'], name='consultatio_require_37fa62_idx')],
            },
        ),
        migrations.CreateModel(
            name='RecommendedTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('doctor_notes', models.TextField(help_text="Doctor's notes explaining why this test was suggested.")),
                ('urgency_level', models.CharField(choices=[('low', 'Low Priority'), ('medium', 'Medium Priority'), ('high', 'High Priority'), ('urgent', 'Urgent')], default='low', help_text='Urgency level of this test recommendation.', max_length=15)),
                ('is_completed', models.BooleanField(default=False, help_text='Whether this test has been completed by the patient.')),
                ('recommended_at', models.DateTimeField(help_text='Timestamp when this test was recommended.')),
                ('consultation', models.ForeignKey(help_text='Consultation where this test was recommended.', on_delete=django.db.models.deletion.CASCADE, related_name='recommended_tests', to='consultations.consultation')),
                ('test', models.ForeignKey(help_text='Medical test that was recommended.', on_delete=django.db.models.deletion.CASCADE, to='consultations.medicaltest')),
            ],
            options={
                'verbose_name': 'Recommended Test',
                'verbose_name_plural': 'Recommended Tests',
                'ordering': ['-recommended_at'],
            },
        ),
        migrations.AddIndex(
            model_name='consultation',
            index=models.Index(fields=['user'], name='consultatio_user_id_015b85_idx'),
        ),
        migrations.AddIndex(
            model_name='consultation',
            index=models.Index(fields=['doctor'], name='consultatio_doctor__6ce364_idx'),
        ),
        migrations.AddIndex(
            model_name='consultation',
            index=models.Index(fields=['analysis'], name='consultatio_analysi_e48db2_idx'),
        ),
        migrations.AddIndex(
            model_name='consultation',
            index=models.Index(fields=['consultation_status'], name='consultatio_consult_3328a9_idx'),
        ),
        migrations.AddIndex(
            model_name='consultation',
            index=models.Index(fields=['requested_at'], name='consultatio_request_3f5823_idx'),
        ),
        migrations.AddIndex(
            model_name='consultation',
            index=models.Index(fields=['scheduled_at'], name='consultatio_schedul_7fae5e_idx'),
        ),
        migrations.AddIndex(
            model_name='consultation',
            index=models.Index(fields=['completed_at'], name='consultatio_complet_675983_idx'),
        ),
        migrations.AddIndex(
            model_name='recommendedtest',
            index=models.Index(fields=['consultation'], name='consultatio_consult_af5e20_idx'),
        ),
        migrations.AddIndex(
            model_name='recommendedtest',
            index=models.Index(fields=['test'], name='consultatio_test_id_3c7a4c_idx'),
        ),
        migrations.AddIndex(
            model_name='recommendedtest',
            index=models.Index(fields=['urgency_level'], name='consultatio_urgency_3e20a4_idx'),
        ),
        migrations.AddIndex(
            model_name='recommendedtest',
            index=models.Index(fields=['is_completed'], name='consultatio_is_comp_29c6d3_idx'),
        ),
        migrations.AddIndex(
            model_name='recommendedtest',
            index=models.Index(fields=['recommended_at'], name='consultatio_recomme_f1d259_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='recommendedtest',
            unique_together={('consultation', 'test')},
        ),
    ]
