# Generated by Django 5.2.4 on 2025-08-01 00:02

import apps.shared.utils.file_helpers
import apps.shared.utils.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted At')),
                ('email', models.EmailField(error_messages={'unique': 'A user with this email already exists.'}, max_length=254, unique=True, validators=[django.core.validators.EmailValidator()], verbose_name='Email Address')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, unique=True, validators=[apps.shared.utils.validators.validate_phone_number], verbose_name='Phone Number')),
                ('first_name', models.CharField(max_length=150, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=150, verbose_name='Last Name')),
                ('birth_date', models.DateField(verbose_name='Birth Date')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1, verbose_name='Gender')),
                ('user_type', models.CharField(blank=True, choices=[('patient', 'Patient'), ('doctor', 'Doctor'), ('admin', 'Admin')], max_length=10, null=True, verbose_name='User Type')),
                ('phone_verified', models.BooleanField(default=False, verbose_name='Phone Verified')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to=apps.shared.utils.file_helpers.generate_upload_path, verbose_name='Profile Image')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False, verbose_name='Is Active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='PatientProfile',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='patient_profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('skin_type', models.CharField(blank=True, choices=[('dry', 'Dry'), ('oily', 'Oily'), ('sensitive', 'Sensitive'), ('normal', 'Normal'), ('combination', 'Combination')], max_length=15, null=True, verbose_name='Skin Type')),
                ('is_pregnant', models.BooleanField(default=False, help_text='Important for product safety recommendations', verbose_name='Currently Pregnant')),
                ('lifestyle_factors', models.JSONField(blank=True, default=dict, help_text='JSON object containing lifestyle information', verbose_name='Lifestyle Factors')),
                ('profile_completed', models.BooleanField(default=False, verbose_name='Profile Completed')),
                ('completion_percentage', models.PositiveSmallIntegerField(default=0, verbose_name='Completion Percentage')),
            ],
            options={
                'verbose_name': 'Patient Profile',
                'verbose_name_plural': 'Patient Profiles',
                'db_table': 'patient_profiles',
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('admin_role', models.CharField(choices=[('super', 'Super Admin'), ('content', 'Content Admin'), ('doctor', 'Doctor Admin'), ('audit', 'Audit Admin')], max_length=20)),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='admin', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmailVerificationCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, help_text='UUID token used in verification URLs', unique=True, verbose_name='URL Token')),
                ('verification_code', models.CharField(help_text='6-digit code that user enters for verification', max_length=6, unique=True, verbose_name='Verification Code')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Expires At')),
                ('is_used', models.BooleanField(default=False, verbose_name='Is Used')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_verifications', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Email Verification',
                'verbose_name_plural': 'Email Verifications',
                'db_table': 'verification_code',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='doctor', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('license_number', models.CharField(max_length=50, unique=True, validators=[apps.shared.utils.validators.validate_license_number], verbose_name='Medical License Number')),
                ('specialization', models.CharField(help_text='Primary medical specialization', max_length=100, verbose_name='Specialization')),
                ('qualifications', models.TextField(help_text='Medical qualifications and certifications', verbose_name='Qualifications')),
                ('approval_status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('suspended', 'Suspended')], default='pending', max_length=15, verbose_name='Approval Status')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='Approved At')),
                ('rejection_reason', models.TextField(blank=True, help_text='Reason for rejection if status is rejected', verbose_name='Rejection Reason')),
                ('is_available', models.BooleanField(default=True, verbose_name='Available for Consultations')),
                ('consultation_count', models.PositiveIntegerField(default=0, verbose_name='Total Consultations')),
                ('rating', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)], verbose_name='Average Rating')),
                ('approved_by', models.ForeignKey(blank=True, limit_choices_to={'user_type': 'admin'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_doctors', to='accounts.admin')),
            ],
            options={
                'verbose_name': 'Doctor',
                'verbose_name_plural': 'Doctors',
                'db_table': 'doctors',
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='users_email_4b85f2_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['phone'], name='users_phone_af6883_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['user_type'], name='users_user_ty_578f8f_idx'),
        ),
        migrations.AddIndex(
            model_name='emailverificationcode',
            index=models.Index(fields=['user', 'is_used'], name='verificatio_user_id_a91428_idx'),
        ),
        migrations.AddIndex(
            model_name='emailverificationcode',
            index=models.Index(fields=['expires_at'], name='verificatio_expires_211f48_idx'),
        ),
        migrations.AddIndex(
            model_name='doctor',
            index=models.Index(fields=['approval_status'], name='doctors_approva_18c078_idx'),
        ),
        migrations.AddIndex(
            model_name='doctor',
            index=models.Index(fields=['specialization'], name='doctors_special_6661e0_idx'),
        ),
        migrations.AddIndex(
            model_name='doctor',
            index=models.Index(fields=['is_available'], name='doctors_is_avai_62f7a8_idx'),
        ),
    ]
