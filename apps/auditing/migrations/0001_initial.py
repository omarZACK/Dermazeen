# Generated by Django 5.2.4 on 2025-07-27 14:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('recommendations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuditTrail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('object_id', models.PositiveIntegerField(help_text='ID of the object being audited.')),
                ('action', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('login', 'Login'), ('logout', 'Logout'), ('analysis', 'Skin Analysis'), ('recommendation', 'Recommendation Generated')], help_text='Action performed on the object.', max_length=20)),
                ('changes', models.JSONField(help_text='JSON representation of the changes made.')),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='When the change was made.')),
                ('content_type', models.ForeignKey(help_text='Content type of the model being audited.', on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(blank=True, help_text='User who made the change.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Audit Trail',
                'verbose_name_plural': 'Audit Trails',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['content_type', 'object_id'], name='auditing_au_content_13120a_idx'), models.Index(fields=['user'], name='auditing_au_user_id_056679_idx'), models.Index(fields=['action'], name='auditing_au_action_70e00b_idx'), models.Index(fields=['timestamp'], name='auditing_au_timesta_c4a4ab_idx')],
            },
        ),
        migrations.CreateModel(
            name='RecommendationAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('reviewed_at', models.DateTimeField(help_text='Timestamp when the review was conducted.')),
                ('audit_status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('flagged', 'Safety Flagged'), ('revision', 'Requires Revision')], help_text='Status of the audit review.', max_length=15)),
                ('reviewer_notes', models.TextField(blank=True, help_text="Reviewer's notes about the recommendation quality and appropriateness.", null=True)),
                ('safety_flags', models.TextField(blank=True, help_text='Any safety concerns or flags identified during review.', null=True)),
                ('compliance_score', models.PositiveIntegerField(blank=True, help_text='Compliance score assigned during audit (1-100).', null=True)),
                ('follow_up_required', models.BooleanField(default=False, help_text='Whether this recommendation requires follow-up review.')),
                ('follow_up_date', models.DateTimeField(blank=True, help_text='Date when follow-up review should be conducted.', null=True)),
                ('recommendation', models.ForeignKey(help_text='Recommendation being audited.', on_delete=django.db.models.deletion.CASCADE, related_name='audits', to='recommendations.recommendation')),
                ('reviewed_by', models.ForeignKey(help_text='Staff member who reviewed this recommendation.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.admin')),
            ],
            options={
                'verbose_name': 'Recommendation Audit',
                'verbose_name_plural': 'Recommendation Audits',
                'ordering': ['-reviewed_at'],
                'indexes': [models.Index(fields=['recommendation'], name='auditing_re_recomme_903332_idx'), models.Index(fields=['reviewed_by'], name='auditing_re_reviewe_b955d0_idx'), models.Index(fields=['audit_status'], name='auditing_re_audit_s_181ef2_idx'), models.Index(fields=['reviewed_at'], name='auditing_re_reviewe_6276b8_idx'), models.Index(fields=['follow_up_required'], name='auditing_re_follow__d2138c_idx'), models.Index(fields=['follow_up_date'], name='auditing_re_follow__33a886_idx'), models.Index(fields=['compliance_score'], name='auditing_re_complia_cfa49a_idx')],
            },
        ),
        migrations.CreateModel(
            name='SystemLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('action_type', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('login', 'Login'), ('logout', 'Logout'), ('analysis', 'Skin Analysis'), ('recommendation', 'Recommendation Generated')], help_text='Type of action performed (CREATE, UPDATE, DELETE, LOGIN, etc.).', max_length=20)),
                ('table_affected', models.CharField(help_text='Name of the database table/model that was affected.', max_length=100)),
                ('record_id', models.PositiveIntegerField(blank=True, help_text='ID of the specific record that was affected.', null=True)),
                ('old_values', models.JSONField(blank=True, help_text="JSON representation of the record's values before the change.", null=True)),
                ('new_values', models.JSONField(blank=True, help_text="JSON representation of the record's values after the change.", null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the action was performed.')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address from which the action was performed.', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='User agent string from the request.', null=True)),
                ('session_key', models.CharField(blank=True, help_text='Session key for tracking user sessions.', max_length=40, null=True)),
                ('additional_data', models.JSONField(blank=True, help_text='Additional context data for the action.', null=True)),
                ('user', models.ForeignKey(blank=True, help_text='User who performed the action (null for system actions).', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'System Log',
                'verbose_name_plural': 'System Logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user'], name='auditing_sy_user_id_c8b062_idx'), models.Index(fields=['action_type'], name='auditing_sy_action__a359c9_idx'), models.Index(fields=['table_affected'], name='auditing_sy_table_a_929638_idx'), models.Index(fields=['record_id'], name='auditing_sy_record__81bf1d_idx'), models.Index(fields=['timestamp'], name='auditing_sy_timesta_b2238b_idx'), models.Index(fields=['ip_address'], name='auditing_sy_ip_addr_4e15a9_idx'), models.Index(fields=['user', 'timestamp'], name='auditing_sy_user_id_6ee07e_idx'), models.Index(fields=['table_affected', 'record_id'], name='auditing_sy_table_a_5ea1cf_idx')],
            },
        ),
    ]
