# Generated by Django 5.2.4 on 2025-08-01 00:02

import apps.shared.utils.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('recommendations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserRoutine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('started_at', models.DateTimeField(help_text='Timestamp when the routine was started.')),
                ('routine_status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('abandoned', 'Abandoned')], default='active', help_text='Current status of the routine.', max_length=15)),
                ('total_days', models.PositiveIntegerField(help_text='Total number of days in the routine.')),
                ('completed_days', models.PositiveIntegerField(default=0, help_text='Number of days completed so far.')),
                ('adherence_rate', models.FloatField(default=0.0, help_text='Adherence rate as a percentage (0.0 - 100.0).', validators=[apps.shared.utils.validators.validate_adherence_rate])),
                ('recommendation', models.OneToOneField(help_text='Recommendation this routine is based on.', on_delete=django.db.models.deletion.CASCADE, to='recommendations.recommendation')),
                ('user', models.ForeignKey(help_text='User following this routine.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Routine',
                'verbose_name_plural': 'User Routines',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='RoutineLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('log_date', models.DateField(help_text='Date for this log entry.')),
                ('morning_completed', models.CharField(choices=[('not_done', 'Not Done'), ('completed', 'Completed'), ('partial', 'Partially Done'), ('skipped', 'Skipped')], default='not_done', help_text='Status of morning routine completion.', max_length=15)),
                ('evening_completed', models.CharField(choices=[('not_done', 'Not Done'), ('completed', 'Completed'), ('partial', 'Partially Done'), ('skipped', 'Skipped')], default='not_done', help_text='Status of evening routine completion.', max_length=15)),
                ('user_notes', models.TextField(blank=True, help_text="User's notes about their routine for this day.", null=True)),
                ('mood_rating', models.PositiveIntegerField(blank=True, help_text="User's mood rating for the day (1-10 scale).", null=True, validators=[apps.shared.utils.validators.validate_mood_rating])),
                ('side_effects', models.TextField(blank=True, help_text='Any side effects experienced during the routine.', null=True)),
                ('logged_at', models.DateTimeField(help_text='Timestamp when this log entry was created.')),
                ('routine', models.ForeignKey(help_text='Routine this log entry belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='routines.userroutine')),
            ],
            options={
                'verbose_name': 'Routine Log',
                'verbose_name_plural': 'Routine Logs',
                'ordering': ['-log_date'],
            },
        ),
        migrations.CreateModel(
            name='ProgressPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('image_url', models.URLField(help_text='URL of the progress photo.')),
                ('notes', models.TextField(blank=True, help_text="User's notes about this progress photo.", null=True)),
                ('taken_at', models.DateTimeField(help_text='Timestamp when the photo was taken.')),
                ('photo_type', models.CharField(choices=[('baseline', 'Baseline Photo'), ('weekly', 'Weekly Progress'), ('monthly', 'Monthly Progress'), ('final', 'Final Result')], help_text='Type of progress photo (before, during, after).', max_length=15)),
                ('user', models.ForeignKey(help_text='User who took this progress photo.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('routine', models.ForeignKey(help_text='Routine this progress photo is associated with.', on_delete=django.db.models.deletion.CASCADE, related_name='progress_photos', to='routines.userroutine')),
            ],
            options={
                'verbose_name': 'Progress Photo',
                'verbose_name_plural': 'Progress Photos',
                'ordering': ['-taken_at'],
            },
        ),
        migrations.CreateModel(
            name='Reminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deleted At')),
                ('reminder_type', models.CharField(choices=[('routine', 'Routine Reminder'), ('hydration', 'Hydration Reminder'), ('progress_photo', 'Progress Photo'), ('consultation', 'Consultation Reminder')], help_text='Type of reminder (routine, photo, checkup).', max_length=20)),
                ('message', models.TextField(help_text='Message content for the reminder.')),
                ('scheduled_time', models.TimeField(help_text='Time of day when the reminder should be sent.')),
                ('days_of_week', models.JSONField(default=list, help_text='List of weekday numbers when reminder should be sent (0=Monday, 6=Sunday). Example: [0, 2, 4] for Mon, Wed, Fri.')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this reminder is currently active.')),
                ('last_sent', models.DateTimeField(blank=True, help_text='Timestamp when this reminder was last sent.', null=True)),
                ('send_count', models.PositiveIntegerField(default=0, help_text='Number of times this reminder has been sent.')),
                ('user', models.ForeignKey(help_text='User receiving this reminder.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reminder',
                'verbose_name_plural': 'Reminders',
                'ordering': ['scheduled_time'],
                'indexes': [models.Index(fields=['user'], name='routines_re_user_id_55a5e4_idx'), models.Index(fields=['reminder_type'], name='routines_re_reminde_0fe86a_idx'), models.Index(fields=['scheduled_time'], name='routines_re_schedul_f7484d_idx'), models.Index(fields=['is_active'], name='routines_re_is_acti_871969_idx'), models.Index(fields=['last_sent'], name='routines_re_last_se_1ecd6a_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='userroutine',
            index=models.Index(fields=['user'], name='routines_us_user_id_7b79f2_idx'),
        ),
        migrations.AddIndex(
            model_name='userroutine',
            index=models.Index(fields=['recommendation'], name='routines_us_recomme_d50a2c_idx'),
        ),
        migrations.AddIndex(
            model_name='userroutine',
            index=models.Index(fields=['routine_status'], name='routines_us_routine_56d4e0_idx'),
        ),
        migrations.AddIndex(
            model_name='userroutine',
            index=models.Index(fields=['started_at'], name='routines_us_started_c77000_idx'),
        ),
        migrations.AddIndex(
            model_name='userroutine',
            index=models.Index(fields=['adherence_rate'], name='routines_us_adheren_db22e7_idx'),
        ),
        migrations.AddIndex(
            model_name='routinelog',
            index=models.Index(fields=['routine'], name='routines_ro_routine_56cc50_idx'),
        ),
        migrations.AddIndex(
            model_name='routinelog',
            index=models.Index(fields=['log_date'], name='routines_ro_log_dat_7e5a97_idx'),
        ),
        migrations.AddIndex(
            model_name='routinelog',
            index=models.Index(fields=['morning_completed'], name='routines_ro_morning_aea485_idx'),
        ),
        migrations.AddIndex(
            model_name='routinelog',
            index=models.Index(fields=['evening_completed'], name='routines_ro_evening_3a9c8a_idx'),
        ),
        migrations.AddIndex(
            model_name='routinelog',
            index=models.Index(fields=['mood_rating'], name='routines_ro_mood_ra_6f6440_idx'),
        ),
        migrations.AddIndex(
            model_name='routinelog',
            index=models.Index(fields=['logged_at'], name='routines_ro_logged__d34e0a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='routinelog',
            unique_together={('routine', 'log_date')},
        ),
        migrations.AddIndex(
            model_name='progressphoto',
            index=models.Index(fields=['user'], name='routines_pr_user_id_193475_idx'),
        ),
        migrations.AddIndex(
            model_name='progressphoto',
            index=models.Index(fields=['routine'], name='routines_pr_routine_7fcb74_idx'),
        ),
        migrations.AddIndex(
            model_name='progressphoto',
            index=models.Index(fields=['photo_type'], name='routines_pr_photo_t_8d62e2_idx'),
        ),
        migrations.AddIndex(
            model_name='progressphoto',
            index=models.Index(fields=['taken_at'], name='routines_pr_taken_a_6515d1_idx'),
        ),
    ]
